import ImageLoader from "../imageloader/ImageLoader.js";
import Vector3 from "../maths_CG/Vector3.js";
import Matrix4 from "../maths_CG/Matrix4.js";
import Vector4 from "../maths_CG/Vector4.js";

export default class Meteoro {
    /**
     * @param {WebGLRenderingContext} gl
     * @param {Matrix4} initial_transform
     */
    constructor(gl, initial_transform) {

        let matrixAux = new Vector3(0, 0, 0);

        this.initial_transform = initial_transform || matrixAux;

        let vertices = this.getVertices();

        let faces = this.getFaces();

        for (let i = 0; i < faces.length; i++) {
            faces[i]--;
        }

        let flat_vertices = [];
        for (let i = 0; i < faces.length; i++) {
            flat_vertices.push(
                vertices[faces[i] * 3],
                vertices[faces[i] * 3 + 1],
                vertices[faces[i] * 3 + 2]
            );
        }

        this.positionBuffer = gl.createBuffer();
        this.vertices = flat_vertices;
        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW);

        this.texture = gl.createTexture();
        gl.activeTexture(gl.TEXTURE8);
        gl.bindTexture(gl.TEXTURE_2D, this.texture);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, ImageLoader.getImage("./texturas/Meteoro.png"));
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);

        this.uv = this.getUV(this.vertices);
        this.UVBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, this.UVBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.uv), gl.STATIC_DRAW);

        let normals = this.getNormals(this.vertices);
        this.normalBuffer = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);
        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);

        this.num_elements = this.vertices.length / 3;
    }

    /**
     * @param {WebGLRenderingContext} gl
     * @param {WebGLUniformLocation} shader_locations
     * @param {Vector4} lightPos
     * @param {Matrix4} viewMatrix
     * @param {Matrix4} projectionMatrix
     */
    draw(gl, shader_locations, lightPos, viewMatrix, projectionMatrix) {
        //gl.useProgram(this.program);

        //gl.bindTexture(gl.TEXTURE_2D, this.texture);

        gl.uniform1i(shader_locations.u_texture, 8);

        gl.enableVertexAttribArray(shader_locations.positionAttribute);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);
        gl.vertexAttribPointer(shader_locations.positionAttribute, 3, gl.FLOAT, false, 0, 0);

        gl.enableVertexAttribArray(shader_locations.texcoordAttribute);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.UVBuffer);
        gl.vertexAttribPointer(shader_locations.texcoordAttribute, 2, gl.FLOAT, false, 0, 0);

        gl.enableVertexAttribArray(shader_locations.normalAttribute);
        gl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);
        gl.vertexAttribPointer(shader_locations.normalAttribute, 3, gl.FLOAT, false, 0, 0);

        let viewModelMatrix = Matrix4.multiply(viewMatrix, this.initial_transform);
        gl.uniformMatrix4fv(shader_locations.VM_matrix, false, viewModelMatrix.toArray());

        //let lightPosView = viewMatrix.multiplyVector(new Vector4(lightPos[0], lightPos[1], lightPos[2], lightPos[3]));
        //gl.uniform3f(shader_locations.lightPosition, lightPosView.x, lightPosView.y, lightPosView.z);

        for (let i = 0; i < lightPos.length; i++) {
            let lightPosView = viewMatrix.multiplyVector(new Vector4(lightPos[i][0], lightPos[i][1], lightPos[i][2], lightPos[i][3]));
            gl.uniform3f(shader_locations.lightPosition[i], lightPosView.x, lightPosView.y, lightPosView.z);
            //gl.uniform3fv(shader_locations.lightPosition[i], [lightPos[i][0], lightPos[i][1], lightPos[i][2]]);
        }
        let projectionViewModelMatrix = Matrix4.multiply(projectionMatrix, viewModelMatrix);
        gl.uniformMatrix4fv(shader_locations.PVM_matrix, false, projectionViewModelMatrix.toArray());

        gl.drawArrays(gl.TRIANGLES, 0, this.num_elements);
    }

    getVertices() {
        return [ //
            -0.158769, 1.167228, -0.282782, //
            -0.14608, 1.087332, -0.420778, //
            -0.144825, 1.010449, -0.516868, //
            -0.150179, 0.927848, -0.633515, //
            -0.164463, 0.829747, -0.796611, //
            -0.122774, 0.644455, -0.973352, //
            -0.046915, 0.332101, -1.059879, //
            -0.039248, 0.057173, -1.093638, //
            -0.031983, -0.197112, -1.003838, //
            -0.123358, -1.102853, -0.487785, //
            -0.103483, 1.158751, -0.285134, //
            -0.058272, 1.110558, -0.451351, //
            -0.053133, 1.068322, -0.574265, //
            -0.034809, 1.003365, -0.714294, //
            0.010379, 0.864552, -0.855075, //
            0.081248, 0.61671, -0.960824, //
            0.142611, 0.318461, -1.037005, //
            0.147985, 0.046459, -1.030814, //
            0.151856, -0.20913, -0.949046, //
            0.151847, -0.455722, -0.953578, //
            0.109677, -0.687744, -0.840401, //
            0.038344, -0.926292, -0.638973, //
            -0.041808, -1.161892, -0.462364, //
            -0.15079, -1.419855, -0.251448, //
            -0.261413, -1.639615, -0.026782, //
            -0.045568, 1.146657, -0.281353, //
            0.06712, 1.086012, -0.446355, //
            0.071443, 1.062547, -0.575024, //
            0.11651, 0.980172, -0.713869, //
            0.212819, 0.785948, -0.82187, //
            0.30249, 0.531019, -0.926379, //
            0.326621, 0.296952, -0.949552, //
            0.331165, 0.030495, -0.898782, //
            0.318276, -0.277885, -0.885951, //
            0.28935, -0.557606, -0.916737, //
            0.225694, -0.777452, -0.776942, //
            0.123156, -1.031474, -0.572263, //
            0.015922, -1.26417, -0.405202, //
            -0.098528, -1.462813, -0.218941, //
            -0.234783, -1.661542, -0.010204, //
            0.014122, 1.128015, -0.267657, //
            0.219662, 1.014945, -0.428001, //
            0.246295, 0.972491, -0.541796, //
            0.295983, 0.877184, -0.662328, //
            0.412331, 0.663108, -0.78377, //
            0.473, 0.447677, -0.878495, //
            0.496148, 0.220258, -0.874973, //
            0.48636, -0.075442, -0.801928, //
            0.451208, -0.428043, -0.867202, //
            0.391887, -0.690629, -0.833918, //
            0.318576, -0.881375, -0.646288, //
            0.193383, -1.145921, -0.478333, //
            0.063684, -1.370403, -0.327327, //
            -0.061956, -1.527908, -0.167318, //
            -0.211353, -1.684199, 0.013484, //
            0.070404, 1.104687, -0.243633, //
            0.358632, 0.9324, -0.404955, //
            0.412888, 0.865236, -0.501822, //
            0.495479, 0.733803, -0.627087, //
            0.558684, 0.569869, -0.735366, //
            0.614544, 0.365999, -0.750685, //
            0.630834, 0.126058, -0.668189, //
            0.603652, -0.219882, -0.66419, //
            0.545717, -0.567404, -0.758807, //
            0.462368, -0.822049, -0.611102, //
            0.370842, -1.033215, -0.468779, //
            0.249413, -1.258389, -0.362303, //
            0.101892, -1.47156, -0.232969, //
            -0.032319, -1.590286, -0.104146, //
            -0.192041, -1.706751, 0.043379, //
            0.112841, 1.084836, -0.211806, //
            0.448238, 0.874259, -0.367126, //
            0.572392, 0.758, -0.49205, //
            0.678571, 0.615768, -0.615033, //
            0.712843, 0.474049, -0.669562, //
            0.718858, 0.27254, -0.605775, //
            0.72453, -0.027075, -0.606002, //
            0.689923, -0.351883, -0.586591, //
            0.611856, -0.673836, -0.532617, //
            0.508408, -0.955223, -0.373964, //
            0.401166, -1.193945, -0.30249, //
            0.293229, -1.355454, -0.230906, //
            0.131949, -1.557435, -0.12733, //
            -0.010073, -1.646044, -0.032229, //
            -0.177571, -1.728294, 0.078323, //
            0.13771, 1.079739, -0.173206, //
            0.496771, 0.843927, -0.307166, //
            0.657009, 0.707255, -0.443182, //
            0.795199, 0.55823, -0.538182, //
            0.816267, 0.406608, -0.544612, //
            0.785733, 0.17612, -0.508028, //
            0.773357, -0.158961, -0.500359, //
            0.722018, -0.497981, -0.44634, //
            0.654687, -0.763715, -0.287263, //
            0.53849, -1.07581, -0.180427, //
            0.422828, -1.315326, -0.128421, //
            0.328028, -1.422651, -0.091873, //
            0.15622, -1.616988, -0.016404, //
            0.004867, -1.690977, 0.045155, //
            -0.168447, -1.747882, 0.116944, //
            0.153998, 1.080125, -0.130065, //
            0.523736, 0.829943, -0.236477, //
            0.690693, 0.694575, -0.342571, //
            0.83515, 0.548002, -0.406132, //
            0.853895, 0.377388, -0.383934, //
            0.816935, 0.121518, -0.341605, //
            0.794699, -0.225245, -0.269222, //
            0.733061, -0.57061, -0.141977, //
            0.650498, -0.880398, -0.020687, //
            0.565563, -1.13191, 0.006898, //
            0.448348, -1.363275, 0.039533, //
            0.342396, -1.479565, 0.054991, //
            0.17775, -1.639174, 0.093358, //
            0.013075, -1.720826, 0.1244, //
            -0.164927, -1.764563, 0.157708, //
            0.162, 1.084175, -0.084823, //
            0.533224, 0.826544, -0.158273, //
            0.70253, 0.698819, -0.223396, //
            0.848586, 0.553549, -0.249053, //
            0.882844, 0.354148, -0.226296, //
            0.860165, 0.077454, -0.170426, //
            0.803795, -0.228088, -0.012248, //
            0.757182, -0.59215, 0.124505, //
            0.665801, -0.945255, 0.180626, //
            0.561785, -1.19282, 0.200755, //
            0.464325, -1.363275, 0.201745, //
            0.339962, -1.514811, 0.201745, //
            0.188425, -1.639174, 0.201745, //
            0.015538, -1.731584, 0.201745, //
            -0.167024, -1.777421, 0.19898, //
            0.162004, 1.090082, -0.039546, //
            0.527755, 0.833053, -0.068927, //
            0.694365, 0.714085, -0.084825, //
            0.837029, 0.5655, -0.087968, //
            0.925554, 0.333565, -0.067403, //
            0.878941, 0.068537, 0.021537, //
            0.807605, -0.221597, 0.207059, //
            0.798431, -0.612961, 0.323218, //
            0.701308, -0.971431, 0.361319, //
            0.573313, -1.206921, 0.375258, //
            0.455225, -1.366586, 0.362609, //
            0.326375, -1.514811, 0.339694, //
            0.17775, -1.639174, 0.310131, //
            0.008185, -1.731584, 0.276403, //
            -0.174503, -1.785629, 0.23909, //
            0.154378, 1.095651, 0.003236, //
            0.50782, 0.844152, 0.023868, //
            0.666052, 0.734172, 0.059116, //
            0.79955, 0.582424, 0.07832, //
            0.881255, 0.356088, 0.13838, //
            0.831482, 0.099551, 0.256187, //
            0.807202, -0.223285, 0.426737, //
            0.826108, -0.653696, 0.494239, //
            0.716933, -1.005835, 0.531311, //
            0.563744, -1.227632, 0.540146, //
            0.427499, -1.376021, 0.514749, //
            0.287143, -1.515296, 0.472146, //
            0.146135, -1.639174, 0.414352, //
            -0.013592, -1.731584, 0.348191, //
            -0.186905, -1.78849, 0.276403, //
            0.140156, 1.10006, 0.042921, //
            0.471782, 0.862114, 0.113344, //
            0.617509, 0.751182, 0.188801, //
            0.73824, 0.60642, 0.247335, //
            0.808751, 0.385011, 0.342567, //
            0.76462, 0.125992, 0.478125, //
            0.786737, -0.242192, 0.603578, //
            0.824139, -0.697251, 0.649406, //
            0.69466, -1.038756, 0.687482, //
            0.518927, -1.247164, 0.691926, //
            0.37175, -1.386176, 0.654368, //
            0.226631, -1.517623, 0.593448, //
            0.094795, -1.639174, 0.510403, //
            -0.048956, -1.731584, 0.414352, //
            -0.204934, -1.78849, 0.310131, //
            0.115785, 1.104361, 0.080126, //
            0.398179, 0.907406, 0.203301, //
            0.518056, 0.785578, 0.323126, //
            0.654313, 0.629661, 0.398986, //
            0.709056, 0.408392, 0.515835, //
            0.686474, 0.131315, 0.648187, //
            0.733195, -0.270645, 0.715634, //
            0.771648, -0.731433, 0.783083, //
            0.614228, -1.058124, 0.821804, //
            0.424828, -1.256504, 0.821326, //
            0.280806, -1.392144, 0.777607, //
            0.142493, -1.519453, 0.699856, //
            0.025702, -1.639174, 0.594592, //
            -0.096547, -1.731584, 0.472343, //
            -0.229196, -1.78849, 0.339694, //
            0.081176, 1.105374, 0.115413, //
            0.28173, 0.971704, 0.274707, //
            0.343602, 0.877769, 0.435616, //
            0.501624, 0.675173, 0.539856, //
            0.532437, 0.457808, 0.665357, //
            0.557671, 0.142366, 0.746571, //
            0.639642, -0.289753, 0.784505, //
            0.65299, -0.743756, 0.878085, //
            0.456445, -1.049223, 0.90504, //
            0.271411, -1.247119, 0.910685, //
            0.149964, -1.388901, 0.873177, //
            0.034849, -1.519216, 0.78789, //
            -0.058487, -1.639174, 0.663684, //
            -0.154538, -1.731584, 0.519934, //
            -0.258759, -1.78849, 0.363956, //
            -0.33632, -1.73989, 0.184806, //
            0.040052, 1.102593, 0.14642, //
            0.158678, 1.015371, 0.32944, //
            0.177565, 0.941425, 0.508729, //
            0.279073, 0.749184, 0.640792, //
            0.324564, 0.498848, 0.771501, //
            0.38837, 0.159715, 0.793714, //
            0.499562, -0.295036, 0.807907, //
            0.463755, -0.724919, 0.905143, //
            0.23916, -1.011884, 0.943058, //
            0.074366, -1.218311, 0.976698, //
            -0.011463, -1.376818, 0.944959, //
            -0.09179, -1.517102, 0.854094, //
            -0.154538, -1.639174, 0.715025, //
            -0.220699, -1.731584, 0.555298, //
            -0.292487, -1.78849, 0.381985, //
            -0.008566, 1.103385, 0.168713, //
            0.048286, 1.029433, 0.367392, //
            0.058566, 0.947732, 0.546353, //
            0.114088, 0.76283, 0.694211, //
            0.167458, 0.498878, 0.818225, //
            0.205871, 0.158951, 0.803196, //
            0.286255, -0.281394, 0.790933, //
            0.20765, -0.670954, 0.89751, //
            -0.014186, -0.949872, 0.983374, //
            -0.140727, -1.181964, 1.04223, //
            -0.187171, -1.361174, 1.002779, //
            -0.228731, -1.514953, 0.895289, //
            -0.258759, -1.639174, 0.74664, //
            -0.292487, -1.731584, 0.577075, //
            -0.329085, -1.78849, 0.393086, //
            -0.058524, 1.105623, 0.180826, //
            -0.04772, 1.036297, 0.383871, //
            -0.049752, 0.946671, 0.557204, //
            -0.023536, 0.76208, 0.707854, //
            0.000323, 0.495295, 0.834059, //
            -0.023217, 0.165641, 0.820753, //
            -0.009123, -0.229578, 0.812095, //
            -0.11464, -0.583332, 0.94046, //
            -0.284395, -0.89451, 1.072653, //
            -0.353179, -1.159202, 1.106054, //
            -0.360917, -1.353131, 1.037769, //
            -0.366853, -1.514616, 0.909269, //
            -0.367145, -1.639174, 0.757315, //
            -0.367145, -1.731584, 0.584428, //
            -0.367145, -1.78849, 0.396835, //
            -0.103921, 1.107074, 0.182105, //
            -0.124205, 1.035929, 0.377488, //
            -0.157997, 0.944494, 0.546891, //
            -0.162383, 0.760907, 0.694737, //
            -0.180826, 0.497445, 0.816894, //
            -0.29347, 0.192313, 0.812258, //
            -0.375222, -0.154209, 0.880668, //
            -0.431713, -0.531204, 1.111226, //
            -0.530384, -0.880412, 1.164692, //
            -0.545918, -1.160158, 1.132199, //
            -0.522271, -1.356206, 1.030891, //
            -0.504998, -1.514747, 0.895403, //
            -0.475532, -1.639174, 0.74664, //
            -0.441803, -1.731584, 0.577075, //
            -0.405205, -1.78849, 0.393086, //
            -0.14265, 1.107972, 0.171573, //
            -0.195931, 1.034969, 0.35587, //
            -0.252516, 0.921196, 0.515122, //
            -0.290806, 0.745565, 0.654891, //
            -0.35675, 0.501028, 0.778048, //
            -0.528439, 0.206195, 0.814407, //
            -0.67811, -0.122395, 0.944491, //
            -0.710329, -0.49734, 1.137781, //
            -0.734851, -0.881525, 1.188727, //
            -0.713724, -1.168776, 1.099527, //
            -0.680057, -1.358869, 0.979305, //
            -0.637743, -1.514811, 0.855026, //
            -0.579753, -1.639174, 0.715025, //
            -0.513592, -1.731584, 0.555298, //
            -0.441803, -1.78849, 0.381985, //
            -0.178188, 1.109572, 0.152468, //
            -0.262074, 1.03468, 0.320554, //
            -0.332763, 0.885464, 0.463092, //
            -0.402242, 0.717149, 0.589424, //
            -0.513108, 0.505256, 0.710935, //
            -0.696685, 0.202902, 0.792263, //
            -0.804783, -0.120707, 0.914713, //
            -0.791244, -0.465464, 0.977202, //
            -0.862797, -0.885389, 1.088448, //
            -0.869316, -1.17452, 1.00362, //
            -0.825034, -1.360559, 0.898893, //
            -0.759993, -1.514811, 0.789682, //
            -0.675803, -1.639174, 0.663684, //
            -0.579753, -1.731584, 0.519934, //
            -0.475532, -1.78849, 0.363956, //
            -0.139607, 1.190529, -0.051312, //
            -0.210803, 1.112272, 0.126388, //
            -0.320064, 1.03468, 0.272963, //
            -0.416953, 0.885464, 0.394, //
            -0.503, 0.707152, 0.500773, //
            -0.64074, 0.509985, 0.607647, //
            -0.811336, 0.199812, 0.713429, //
            -0.830449, -0.127979, 0.772397, //
            -0.758581, -0.463564, 0.731927, //
            -0.914155, -0.884576, 0.894896, //
            -1.00086, -1.183091, 0.872583, //
            -0.954203, -1.362687, 0.79094, //
            -0.867145, -1.514811, 0.701745, //
            -0.759993, -1.639174, 0.594592, //
            -0.637743, -1.731584, 0.472343, //
            -0.503794, -1.785629, 0.33898, //
            -0.239495, 1.11619, 0.094187, //
            -0.363724, 1.024575, 0.214168, //
            -0.482249, 0.87696, 0.309629, //
            -0.588158, 0.70711, 0.392905, //
            -0.731017, 0.511084, 0.478098, //
            -0.881602, 0.201841, 0.577637, //
            -0.836179, -0.14729, 0.616967, //
            -0.772023, -0.489654, 0.518681, //
            -0.956609, -0.895404, 0.686367, //
            -1.101764, -1.190223, 0.721503, //
            -1.058483, -1.363275, 0.663684, //
            -0.955083, -1.514811, 0.594592, //
            -0.829085, -1.639174, 0.510403, //
            -0.685335, -1.731584, 0.414352, //
            -0.524326, -1.777421, 0.307366, //
            -0.26259, 1.118822, 0.056564, //
            -0.397569, 1.007479, 0.141436, //
            -0.524585, 0.856793, 0.213148, //
            -0.653281, 0.707107, 0.270598, //
            -0.793304, 0.510866, 0.330603, //
            -0.924178, 0.201872, 0.409733, //
            -0.852049, -0.172509, 0.46587, //
            -0.856388, -0.522154, 0.372489, //
            -1.038986, -0.917469, 0.514465, //
            -1.17561, -1.19305, 0.558732, //
            -1.134201, -1.363341, 0.52002, //
            -1.020427, -1.514811, 0.472343, //
            -0.87034, -1.616988, 0.408811, //
            -0.715808, -1.720826, 0.345504, //
            -0.536509, -1.764563, 0.270426, //
            -0.279128, 1.11867, 0.014375, //
            -0.426244, 0.994826, 0.056638, //
            -0.547263, 0.830767, 0.117177, //
            -0.691076, 0.698617, 0.147904, //
            -0.832167, 0.518726, 0.171505, //
            -0.960059, 0.221911, 0.223435, //
            -0.897253, -0.156518, 0.296458, //
            -0.905047, -0.522001, 0.278595, //
            -1.064026, -0.881227, 0.347012, //
            -1.175761, -1.136099, 0.37278, //
            -1.153966, -1.315732, 0.352504, //
            -1.044644, -1.479565, 0.330891, //
            -0.874885, -1.557435, 0.289715, //
            -0.724017, -1.690977, 0.26626, //
            -0.540029, -1.747882, 0.229662, //
            -0.293415, 1.12084, -0.033354, //
            -0.451829, 0.994924, -0.020793, //
            -0.55509, 0.786337, 0.060329, //
            -0.686007, 0.633826, 0.085919, //
            -0.822441, 0.478388, 0.074097, //
            -0.973203, 0.273297, 0.027403, //
            -0.984321, -0.071516, 0.078872, //
            -0.940693, -0.431372, 0.125742, //
            -1.014118, -0.751964, 0.151807, //
            -1.090594, -0.99339, 0.15917, //
            -1.097676, -1.19536, 0.161275, //
            -1.016547, -1.387864, 0.170036, //
            -0.850279, -1.479817, 0.161941, //
            -0.710946, -1.646044, 0.180379, //
            -0.534873, -1.728294, 0.186709, //
            -0.299608, 1.121213, -0.081331, //
            -0.46321, 0.989449, -0.088504, //
            -0.557831, 0.749496, 0.013234, //
            -0.664343, 0.556956, 0.047792, //
            -0.768415, 0.387512, 0.033404, //
            -0.909548, 0.267431, -0.090611, //
            -1.008004, 0.007177, -0.107737, //
            -1.002894, -0.314977, -0.069574, //
            -0.996376, -0.598642, -0.054599, //
            -1.007829, -0.807068, -0.068538, //
            -1.00311, -1.03489, -0.04068, //
            -0.945424, -1.261286, 0.000471, //
            -0.799986, -1.392661, 0.031785, //
            -0.678248, -1.590286, 0.091794, //
            -0.521332, -1.706751, 0.143268, //
            -0.296023, 1.119337, -0.126482, //
            -0.463318, 1.002722, -0.164364, //
            -0.564018, 0.775671, -0.081774, //
            -0.659702, 0.5597, -0.042618, //
            -0.727981, 0.361268, -0.064558, //
            -0.816903, 0.239297, -0.188375, //
            -0.918222, 0.103017, -0.31637, //
            -0.955174, -0.205873, -0.256013, //
            -0.956611, -0.470826, -0.230458, //
            -0.93425, -0.672862, -0.240394, //
            -0.910514, -0.885697, -0.234277, //
            -0.841261, -1.120655, -0.167304, //
            -0.733248, -1.315391, -0.091736, //
            -0.628117, -1.527908, 0.004425, //
            -0.499979, -1.684199, 0.101038, //
            -0.284827, 1.123774, -0.1652, //
            -0.447141, 1.025465, -0.23706, //
            -0.553439, 0.831593, -0.191726, //
            -0.652724, 0.64087, -0.188623, //
            -0.699897, 0.434968, -0.225956, //
            -0.746048, 0.296096, -0.366999, //
            -0.802724, 0.146289, -0.478718, //
            -0.819168, -0.109963, -0.452855, //
            -0.818953, -0.339728, -0.433519, //
            -0.793516, -0.575452, -0.389882, //
            -0.769136, -0.788677, -0.369688, //
            -0.713982, -0.984399, -0.323586, //
            -0.646231, -1.236904, -0.20739, //
            -0.563164, -1.462814, -0.077995, //
            -0.471652, -1.661542, 0.06165, //
            -0.273966, 1.137663, -0.201985, //
            -0.406063, 1.034137, -0.282393, //
            -0.50455, 0.872802, -0.274589, //
            -0.597441, 0.708207, -0.300906, //
            -0.652793, 0.528978, -0.36902, //
            -0.682078, 0.3811, -0.521671, //
            -0.690452, 0.18987, -0.629733, //
            -0.685888, -0.074888, -0.608074, //
            -0.670851, -0.282247, -0.596501, //
            -0.642398, -0.495766, -0.549787, //
            -0.615951, -0.688256, -0.515774, //
            -0.580025, -0.887072, -0.4529, //
            -0.543042, -1.161892, -0.310316, //
            -0.496046, -1.419856, -0.146715, //
            -0.437423, -1.639615, 0.02661, //
            -0.256882, 1.150753, -0.232914, //
            -0.348053, 1.039315, -0.317079, //
            -0.423838, 0.89621, -0.330116, //
            -0.498549, 0.754577, -0.379221, //
            -0.569665, 0.614403, -0.480267, //
            -0.605767, 0.482014, -0.655576, //
            -0.593013, 0.281683, -0.783308, //
            -0.538589, -0.051365, -0.727798, //
            -0.523292, -0.272982, -0.717864, //
            -0.490112, -0.468823, -0.671705, //
            -0.458596, -0.632324, -0.625981, //
            -0.447046, -0.828073, -0.556773, //
            -0.432017, -1.102854, -0.394154, //
            -0.423694, -1.388261, -0.202198, //
            -0.398562, -1.61916, -0.002761, //
            -0.233731, 1.16166, -0.256664, //
            -0.282794, 1.046137, -0.347083, //
            -0.330046, 0.912302, -0.370476, //
            -0.382644, 0.79019, -0.437175, //
            -0.434032, 0.659966, -0.547648, //
            -0.491563, 0.551074, -0.749687, //
            -0.463341, 0.349553, -0.926197, //
            -0.383909, 0.007494, -0.872473, //
            -0.368057, -0.234333, -0.863617, //
            -0.339873, -0.449904, -0.807695, //
            -0.310441, -0.606033, -0.727453, //
            -0.309986, -0.795507, -0.630241, //
            -0.323128, -1.07461, -0.452549, //
            -0.34488, -1.360425, -0.244515, //
            -0.356495, -1.600816, -0.025371, //
            -0.20319, 1.168668, -0.272977, //
            -0.215503, 1.063087, -0.383921, //
            -0.236113, 0.951064, -0.436565, //
            -0.263741, 0.843147, -0.520619, //
            -0.29644, 0.730585, -0.652655, //
            -0.300427, 0.587285, -0.870913, //
            -0.27251, 0.372924, -1.020612, //
            -0.221009, 0.063093, -1.035218, //
            -0.206121, -0.191652, -1.003828, //
            -0.183968, -0.418471, -0.951009, //
            -0.165407, -0.588274, -0.832068, //
            -0.177634, -0.79441, -0.671713, //
            -0.218906, -1.07461, -0.484164, //
            -0.273091, -1.360425, -0.266292, //
            -0.319898, -1.600816, -0.036473, //
            -0.015973, -0.422364, -0.981919, //
            -0.022928, -0.619513, -0.862605, //
            -0.059639, -0.8384, -0.674622, //
            -0.211086, -1.388261, -0.266692, //
            -0.290176, -1.61916, -0.03564, //
        ]
    }

    getFaces() {
        return [
            7, 16, 17, //
            482, 24, 25,
            8, 17, 18,
            1, 297, 11,
            206, 482, 25,
            9, 18, 19,
            2, 11, 12,
            478, 19, 20,
            3, 12, 13,
            479, 20, 21,
            4, 13, 14,
            480, 21, 22,
            5, 14, 15,
            10, 22, 23,
            6, 15, 16,
            481, 23, 24,
            23, 37, 38,
            16, 30, 31,
            24, 38, 39,
            17, 31, 32,
            25, 39, 40,
            18, 32, 33,
            11, 297, 26,
            206, 25, 40,
            19, 33, 34,
            12, 26, 27,
            20, 34, 35,
            13, 27, 28,
            21, 35, 36,
            14, 28, 29,
            22, 36, 37,
            15, 29, 30,
            35, 49, 50,
            28, 42, 43,
            36, 50, 51,
            29, 43, 44,
            37, 51, 52,
            30, 44, 45,
            38, 52, 53,
            31, 45, 46,
            39, 53, 54,
            32, 46, 47,
            40, 54, 55,
            33, 47, 48,
            26, 297, 41,
            206, 40, 55,
            34, 48, 49,
            27, 41, 42,
            54, 68, 69,
            47, 61, 62,
            55, 69, 70,
            48, 62, 63,
            41, 297, 56,
            206, 55, 70,
            49, 63, 64,
            42, 56, 57,
            50, 64, 65,
            43, 57, 58,
            51, 65, 66,
            44, 58, 59,
            52, 66, 67,
            45, 59, 60,
            53, 67, 68,
            46, 60, 61,
            58, 72, 73,
            66, 80, 81,
            59, 73, 74,
            67, 81, 82,
            60, 74, 75,
            68, 82, 83,
            61, 75, 76,
            69, 83, 84,
            62, 76, 77,
            70, 84, 85,
            63, 77, 78,
            56, 297, 71,
            206, 70, 85,
            64, 78, 79,
            57, 71, 72,
            65, 79, 80,
            77, 91, 92,
            85, 99, 100,
            78, 92, 93,
            71, 297, 86,
            206, 85, 100,
            79, 93, 94,
            72, 86, 87,
            80, 94, 95,
            73, 87, 88,
            81, 95, 96,
            74, 88, 89,
            82, 96, 97,
            75, 89, 90,
            83, 97, 98,
            76, 90, 91,
            84, 98, 99,
            96, 110, 111,
            89, 103, 104,
            97, 111, 112,
            90, 104, 105,
            98, 112, 113,
            91, 105, 106,
            99, 113, 114,
            92, 106, 107,
            100, 114, 115,
            93, 107, 108,
            86, 297, 101,
            206, 100, 115,
            94, 108, 109,
            87, 101, 102,
            95, 109, 110,
            88, 102, 103,
            115, 129, 130,
            108, 122, 123,
            101, 297, 116,
            206, 115, 130,
            109, 123, 124,
            102, 116, 117,
            110, 124, 125,
            103, 117, 118,
            111, 125, 126,
            104, 118, 119,
            112, 126, 127,
            105, 119, 120,
            113, 127, 128,
            106, 120, 121,
            114, 128, 129,
            107, 121, 122,
            119, 133, 134,
            127, 141, 142,
            120, 134, 135,
            128, 142, 143,
            121, 135, 136,
            129, 143, 144,
            122, 136, 137,
            130, 144, 145,
            123, 137, 138,
            116, 297, 131,
            206, 130, 145,
            124, 138, 139,
            117, 131, 132,
            125, 139, 140,
            118, 132, 133,
            126, 140, 141,
            138, 152, 153,
            131, 297, 146,
            206, 145, 160,
            139, 153, 154,
            132, 146, 147,
            140, 154, 155,
            133, 147, 148,
            141, 155, 156,
            134, 148, 149,
            142, 156, 157,
            135, 149, 150,
            143, 157, 158,
            136, 150, 151,
            144, 158, 159,
            137, 151, 152,
            145, 159, 160,
            157, 171, 172,
            150, 164, 165,
            158, 172, 173,
            151, 165, 166,
            159, 173, 174,
            152, 166, 167,
            160, 174, 175,
            153, 167, 168,
            146, 297, 161,
            206, 160, 175,
            154, 168, 169,
            147, 161, 162,
            155, 169, 170,
            148, 162, 163,
            156, 170, 171,
            149, 163, 164,
            206, 175, 190,
            169, 183, 184,
            162, 176, 177,
            170, 184, 185,
            163, 177, 178,
            171, 185, 186,
            164, 178, 179,
            172, 186, 187,
            165, 179, 180,
            173, 187, 188,
            166, 180, 181,
            174, 188, 189,
            167, 181, 182,
            175, 189, 190,
            168, 182, 183,
            161, 297, 176,
            188, 202, 203,
            181, 195, 196,
            189, 203, 204,
            182, 196, 197,
            190, 204, 205,
            183, 197, 198,
            176, 297, 191,
            206, 190, 205,
            184, 198, 199,
            177, 191, 192,
            185, 199, 200,
            178, 192, 193,
            186, 200, 201,
            179, 193, 194,
            187, 201, 202,
            180, 194, 195,
            192, 207, 208,
            200, 215, 216,
            193, 208, 209,
            201, 216, 217,
            194, 209, 210,
            202, 217, 218,
            195, 210, 211,
            203, 218, 219,
            196, 211, 212,
            204, 219, 220,
            197, 212, 213,
            205, 220, 221,
            198, 213, 214,
            191, 297, 207,
            206, 205, 221,
            199, 214, 215,
            212, 226, 227,
            220, 234, 235,
            213, 227, 228,
            221, 235, 236,
            214, 228, 229,
            207, 297, 222,
            206, 221, 236,
            215, 229, 230,
            208, 222, 223,
            216, 230, 231,
            209, 223, 224,
            217, 231, 232,
            210, 224, 225,
            218, 232, 233,
            211, 225, 226,
            219, 233, 234,
            231, 245, 246,
            224, 238, 239,
            232, 246, 247,
            225, 239, 240,
            233, 247, 248,
            226, 240, 241,
            234, 248, 249,
            227, 241, 242,
            235, 249, 250,
            228, 242, 243,
            236, 250, 251,
            229, 243, 244,
            222, 297, 237,
            206, 236, 251,
            230, 244, 245,
            223, 237, 238,
            250, 264, 265,
            243, 257, 258,
            251, 265, 266,
            244, 258, 259,
            237, 297, 252,
            206, 251, 266,
            245, 259, 260,
            238, 252, 253,
            246, 260, 261,
            239, 253, 254,
            247, 261, 262,
            240, 254, 255,
            248, 262, 263,
            241, 255, 256,
            249, 263, 264,
            242, 256, 257,
            254, 268, 269,
            262, 276, 277,
            255, 269, 270,
            263, 277, 278,
            256, 270, 271,
            264, 278, 279,
            257, 271, 272,
            265, 279, 280,
            258, 272, 273,
            266, 280, 281,
            259, 273, 274,
            252, 297, 267,
            206, 266, 281,
            260, 274, 275,
            253, 267, 268,
            261, 275, 276,
            273, 287, 288,
            281, 295, 296,
            274, 288, 289,
            267, 297, 282,
            206, 281, 296,
            275, 289, 290,
            268, 282, 283,
            276, 290, 291,
            269, 283, 284,
            277, 291, 292,
            270, 284, 285,
            278, 292, 293,
            271, 285, 286,
            279, 293, 294,
            272, 286, 287,
            280, 294, 295,
            292, 307, 308,
            285, 300, 301,
            293, 308, 309,
            286, 301, 302,
            294, 309, 310,
            287, 302, 303,
            295, 310, 311,
            288, 303, 304,
            296, 311, 312,
            289, 304, 305,
            282, 297, 298,
            206, 296, 312,
            290, 305, 306,
            283, 298, 299,
            291, 306, 307,
            284, 299, 300,
            312, 326, 327,
            305, 319, 320,
            298, 297, 313,
            206, 312, 327,
            306, 320, 321,
            299, 313, 314,
            307, 321, 322,
            300, 314, 315,
            308, 322, 323,
            301, 315, 316,
            309, 323, 324,
            302, 316, 317,
            310, 324, 325,
            303, 317, 318,
            311, 325, 326,
            304, 318, 319,
            324, 338, 339,
            317, 331, 332,
            325, 339, 340,
            318, 332, 333,
            326, 340, 341,
            319, 333, 334,
            327, 341, 342,
            320, 334, 335,
            313, 297, 328,
            206, 327, 342,
            321, 335, 336,
            314, 328, 329,
            322, 336, 337,
            315, 329, 330,
            323, 337, 338,
            316, 330, 331,
            328, 297, 343,
            206, 342, 357,
            336, 350, 351,
            329, 343, 344,
            337, 351, 352,
            330, 344, 345,
            338, 352, 353,
            331, 345, 346,
            339, 353, 354,
            332, 346, 347,
            340, 354, 355,
            333, 347, 348,
            341, 355, 356,
            334, 348, 349,
            342, 356, 357,
            335, 349, 350,
            347, 361, 362,
            355, 369, 370,
            348, 362, 363,
            356, 370, 371,
            349, 363, 364,
            357, 371, 372,
            350, 364, 365,
            343, 297, 358,
            206, 357, 372,
            351, 365, 366,
            344, 358, 359,
            352, 366, 367,
            345, 359, 360,
            353, 367, 368,
            346, 360, 361,
            354, 368, 369,
            366, 380, 381,
            359, 373, 374,
            367, 381, 382,
            360, 374, 375,
            368, 382, 383,
            361, 375, 376,
            369, 383, 384,
            362, 376, 377,
            370, 384, 385,
            363, 377, 378,
            371, 385, 386,
            364, 378, 379,
            372, 386, 387,
            365, 379, 380,
            358, 297, 373,
            206, 372, 387,
            385, 399, 400,
            378, 392, 393,
            386, 400, 401,
            379, 393, 394,
            387, 401, 402,
            380, 394, 395,
            373, 297, 388,
            206, 387, 402,
            381, 395, 396,
            374, 388, 389,
            382, 396, 397,
            375, 389, 390,
            383, 397, 398,
            376, 390, 391,
            384, 398, 399,
            377, 391, 392,
            389, 403, 404,
            397, 411, 412,
            390, 404, 405,
            398, 412, 413,
            391, 405, 406,
            399, 413, 414,
            392, 406, 407,
            400, 414, 415,
            393, 407, 408,
            401, 415, 416,
            394, 408, 409,
            402, 416, 417,
            395, 409, 410,
            388, 297, 403,
            206, 402, 417,
            396, 410, 411,
            408, 422, 423,
            416, 430, 431,
            409, 423, 424,
            417, 431, 432,
            410, 424, 425,
            403, 297, 418,
            206, 417, 432,
            411, 425, 426,
            404, 418, 419,
            412, 426, 427,
            405, 419, 420,
            413, 427, 428,
            406, 420, 421,
            414, 428, 429,
            407, 421, 422,
            415, 429, 430,
            427, 441, 442,
            420, 434, 435,
            428, 442, 443,
            421, 435, 436,
            429, 443, 444,
            422, 436, 437,
            430, 444, 445,
            423, 437, 438,
            431, 445, 446,
            424, 438, 439,
            432, 446, 447,
            425, 439, 440,
            418, 297, 433,
            206, 432, 447,
            426, 440, 441,
            419, 433, 434,
            446, 460, 461,
            439, 453, 454,
            447, 461, 462,
            440, 454, 455,
            433, 297, 448,
            206, 447, 462,
            441, 455, 456,
            434, 448, 449,
            442, 456, 457,
            435, 449, 450,
            443, 457, 458,
            436, 450, 451,
            444, 458, 459,
            437, 451, 452,
            445, 459, 460,
            438, 452, 453,
            458, 472, 473,
            451, 465, 466,
            459, 473, 474,
            452, 466, 467,
            460, 474, 475,
            453, 467, 468,
            461, 475, 476,
            454, 468, 469,
            462, 476, 477,
            455, 469, 470,
            448, 297, 463,
            206, 462, 477,
            456, 470, 471,
            449, 463, 464,
            457, 471, 472,
            450, 464, 465,
            477, 481, 482,
            470, 7, 8,
            463, 297, 1,
            206, 477, 482,
            471, 8, 9,
            464, 1, 2,
            472, 9, 478,
            465, 2, 3,
            473, 478, 479,
            466, 3, 4,
            474, 479, 480,
            467, 4, 5,
            475, 480, 10,
            468, 5, 6,
            476, 10, 481,
            469, 6, 7,
            7, 6, 16,
            482, 481, 24,
            8, 7, 17,
            9, 8, 18,
            2, 1, 11,
            478, 9, 19,
            3, 2, 12,
            479, 478, 20,
            4, 3, 13,
            480, 479, 21,
            5, 4, 14,
            10, 480, 22,
            6, 5, 15,
            481, 10, 23,
            23, 22, 37,
            16, 15, 30,
            24, 23, 38,
            17, 16, 31,
            25, 24, 39,
            18, 17, 32,
            19, 18, 33,
            12, 11, 26,
            20, 19, 34,
            13, 12, 27,
            21, 20, 35,
            14, 13, 28,
            22, 21, 36,
            15, 14, 29,
            35, 34, 49,
            28, 27, 42,
            36, 35, 50,
            29, 28, 43,
            37, 36, 51,
            30, 29, 44,
            38, 37, 52,
            31, 30, 45,
            39, 38, 53,
            32, 31, 46,
            40, 39, 54,
            33, 32, 47,
            34, 33, 48,
            27, 26, 41,
            54, 53, 68,
            47, 46, 61,
            55, 54, 69,
            48, 47, 62,
            49, 48, 63,
            42, 41, 56,
            50, 49, 64,
            43, 42, 57,
            51, 50, 65,
            44, 43, 58,
            52, 51, 66,
            45, 44, 59,
            53, 52, 67,
            46, 45, 60,
            58, 57, 72,
            66, 65, 80,
            59, 58, 73,
            67, 66, 81,
            60, 59, 74,
            68, 67, 82,
            61, 60, 75,
            69, 68, 83,
            62, 61, 76,
            70, 69, 84,
            63, 62, 77,
            64, 63, 78,
            57, 56, 71,
            65, 64, 79,
            77, 76, 91,
            85, 84, 99,
            78, 77, 92,
            79, 78, 93,
            72, 71, 86,
            80, 79, 94,
            73, 72, 87,
            81, 80, 95,
            74, 73, 88,
            82, 81, 96,
            75, 74, 89,
            83, 82, 97,
            76, 75, 90,
            84, 83, 98,
            96, 95, 110,
            89, 88, 103,
            97, 96, 111,
            90, 89, 104,
            98, 97, 112,
            91, 90, 105,
            99, 98, 113,
            92, 91, 106,
            100, 99, 114,
            93, 92, 107,
            94, 93, 108,
            87, 86, 101,
            95, 94, 109,
            88, 87, 102,
            115, 114, 129,
            108, 107, 122,
            109, 108, 123,
            102, 101, 116,
            110, 109, 124,
            103, 102, 117,
            111, 110, 125,
            104, 103, 118,
            112, 111, 126,
            105, 104, 119,
            113, 112, 127,
            106, 105, 120,
            114, 113, 128,
            107, 106, 121,
            119, 118, 133,
            127, 126, 141,
            120, 119, 134,
            128, 127, 142,
            121, 120, 135,
            129, 128, 143,
            122, 121, 136,
            130, 129, 144,
            123, 122, 137,
            124, 123, 138,
            117, 116, 131,
            125, 124, 139,
            118, 117, 132,
            126, 125, 140,
            138, 137, 152,
            139, 138, 153,
            132, 131, 146,
            140, 139, 154,
            133, 132, 147,
            141, 140, 155,
            134, 133, 148,
            142, 141, 156,
            135, 134, 149,
            143, 142, 157,
            136, 135, 150,
            144, 143, 158,
            137, 136, 151,
            145, 144, 159,
            157, 156, 171,
            150, 149, 164,
            158, 157, 172,
            151, 150, 165,
            159, 158, 173,
            152, 151, 166,
            160, 159, 174,
            153, 152, 167,
            154, 153, 168,
            147, 146, 161,
            155, 154, 169,
            148, 147, 162,
            156, 155, 170,
            149, 148, 163,
            169, 168, 183,
            162, 161, 176,
            170, 169, 184,
            163, 162, 177,
            171, 170, 185,
            164, 163, 178,
            172, 171, 186,
            165, 164, 179,
            173, 172, 187,
            166, 165, 180,
            174, 173, 188,
            167, 166, 181,
            175, 174, 189,
            168, 167, 182,
            188, 187, 202,
            181, 180, 195,
            189, 188, 203,
            182, 181, 196,
            190, 189, 204,
            183, 182, 197,
            184, 183, 198,
            177, 176, 191,
            185, 184, 199,
            178, 177, 192,
            186, 185, 200,
            179, 178, 193,
            187, 186, 201,
            180, 179, 194,
            192, 191, 207,
            200, 199, 215,
            193, 192, 208,
            201, 200, 216,
            194, 193, 209,
            202, 201, 217,
            195, 194, 210,
            203, 202, 218,
            196, 195, 211,
            204, 203, 219,
            197, 196, 212,
            205, 204, 220,
            198, 197, 213,
            199, 198, 214,
            212, 211, 226,
            220, 219, 234,
            213, 212, 227,
            221, 220, 235,
            214, 213, 228,
            215, 214, 229,
            208, 207, 222,
            216, 215, 230,
            209, 208, 223,
            217, 216, 231,
            210, 209, 224,
            218, 217, 232,
            211, 210, 225,
            219, 218, 233,
            231, 230, 245,
            224, 223, 238,
            232, 231, 246,
            225, 224, 239,
            233, 232, 247,
            226, 225, 240,
            234, 233, 248,
            227, 226, 241,
            235, 234, 249,
            228, 227, 242,
            236, 235, 250,
            229, 228, 243,
            230, 229, 244,
            223, 222, 237,
            250, 249, 264,
            243, 242, 257,
            251, 250, 265,
            244, 243, 258,
            245, 244, 259,
            238, 237, 252,
            246, 245, 260,
            239, 238, 253,
            247, 246, 261,
            240, 239, 254,
            248, 247, 262,
            241, 240, 255,
            249, 248, 263,
            242, 241, 256,
            254, 253, 268,
            262, 261, 276,
            255, 254, 269,
            263, 262, 277,
            256, 255, 270,
            264, 263, 278,
            257, 256, 271,
            265, 264, 279,
            258, 257, 272,
            266, 265, 280,
            259, 258, 273,
            260, 259, 274,
            253, 252, 267,
            261, 260, 275,
            273, 272, 287,
            281, 280, 295,
            274, 273, 288,
            275, 274, 289,
            268, 267, 282,
            276, 275, 290,
            269, 268, 283,
            277, 276, 291,
            270, 269, 284,
            278, 277, 292,
            271, 270, 285,
            279, 278, 293,
            272, 271, 286,
            280, 279, 294,
            292, 291, 307,
            285, 284, 300,
            293, 292, 308,
            286, 285, 301,
            294, 293, 309,
            287, 286, 302,
            295, 294, 310,
            288, 287, 303,
            296, 295, 311,
            289, 288, 304,
            290, 289, 305,
            283, 282, 298,
            291, 290, 306,
            284, 283, 299,
            312, 311, 326,
            305, 304, 319,
            306, 305, 320,
            299, 298, 313,
            307, 306, 321,
            300, 299, 314,
            308, 307, 322,
            301, 300, 315,
            309, 308, 323,
            302, 301, 316,
            310, 309, 324,
            303, 302, 317,
            311, 310, 325,
            304, 303, 318,
            324, 323, 338,
            317, 316, 331,
            325, 324, 339,
            318, 317, 332,
            326, 325, 340,
            319, 318, 333,
            327, 326, 341,
            320, 319, 334,
            321, 320, 335,
            314, 313, 328,
            322, 321, 336,
            315, 314, 329,
            323, 322, 337,
            316, 315, 330,
            336, 335, 350,
            329, 328, 343,
            337, 336, 351,
            330, 329, 344,
            338, 337, 352,
            331, 330, 345,
            339, 338, 353,
            332, 331, 346,
            340, 339, 354,
            333, 332, 347,
            341, 340, 355,
            334, 333, 348,
            342, 341, 356,
            335, 334, 349,
            347, 346, 361,
            355, 354, 369,
            348, 347, 362,
            356, 355, 370,
            349, 348, 363,
            357, 356, 371,
            350, 349, 364,
            351, 350, 365,
            344, 343, 358,
            352, 351, 366,
            345, 344, 359,
            353, 352, 367,
            346, 345, 360,
            354, 353, 368,
            366, 365, 380,
            359, 358, 373,
            367, 366, 381,
            360, 359, 374,
            368, 367, 382,
            361, 360, 375,
            369, 368, 383,
            362, 361, 376,
            370, 369, 384,
            363, 362, 377,
            371, 370, 385,
            364, 363, 378,
            372, 371, 386,
            365, 364, 379,
            385, 384, 399,
            378, 377, 392,
            386, 385, 400,
            379, 378, 393,
            387, 386, 401,
            380, 379, 394,
            381, 380, 395,
            374, 373, 388,
            382, 381, 396,
            375, 374, 389,
            383, 382, 397,
            376, 375, 390,
            384, 383, 398,
            377, 376, 391,
            389, 388, 403,
            397, 396, 411,
            390, 389, 404,
            398, 397, 412,
            391, 390, 405,
            399, 398, 413,
            392, 391, 406,
            400, 399, 414,
            393, 392, 407,
            401, 400, 415,
            394, 393, 408,
            402, 401, 416,
            395, 394, 409,
            396, 395, 410,
            408, 407, 422,
            416, 415, 430,
            409, 408, 423,
            417, 416, 431,
            410, 409, 424,
            411, 410, 425,
            404, 403, 418,
            412, 411, 426,
            405, 404, 419,
            413, 412, 427,
            406, 405, 420,
            414, 413, 428,
            407, 406, 421,
            415, 414, 429,
            427, 426, 441,
            420, 419, 434,
            428, 427, 442,
            421, 420, 435,
            429, 428, 443,
            422, 421, 436,
            430, 429, 444,
            423, 422, 437,
            431, 430, 445,
            424, 423, 438,
            432, 431, 446,
            425, 424, 439,
            426, 425, 440,
            419, 418, 433,
            446, 445, 460,
            439, 438, 453,
            447, 446, 461,
            440, 439, 454,
            441, 440, 455,
            434, 433, 448,
            442, 441, 456,
            435, 434, 449,
            443, 442, 457,
            436, 435, 450,
            444, 443, 458,
            437, 436, 451,
            445, 444, 459,
            438, 437, 452,
            458, 457, 472,
            451, 450, 465,
            459, 458, 473,
            452, 451, 466,
            460, 459, 474,
            453, 452, 467,
            461, 460, 475,
            454, 453, 468,
            462, 461, 476,
            455, 454, 469,
            456, 455, 470,
            449, 448, 463,
            457, 456, 471,
            450, 449, 464,
            477, 476, 481,
            470, 469, 7,
            471, 470, 8,
            464, 463, 1,
            472, 471, 9,
            465, 464, 2,
            473, 472, 478,
            466, 465, 3,
            474, 473, 479,
            467, 466, 4,
            475, 474, 480,
            468, 467, 5,
            476, 475, 10,
            469, 468, 6,
        ];
    }

    getNormals(vertices) {

        let normals = [];

        let v1, v2, v3, n;

        for (let i = 0; i < vertices.length; i += 9) {

            v1 = new Vector3(vertices[i], vertices[i + 1], vertices[i + 2]);
            v2 = new Vector3(vertices[i + 3], vertices[i + 4], vertices[i + 5]);
            v3 = new Vector3(vertices[i + 6], vertices[i + 7], vertices[i + 8]);

            n = Vector3.cross(
                Vector3.subtract(v1, v2),
                Vector3.subtract(v2, v3)
            ).normalize();

            normals.push(
                n.x, n.y, n.z,
                n.x, n.y, n.z,
                n.x, n.y, n.z
            );
        }

        return normals;
    }

    getUV(vertices) {
        // se calculan las coordenadas UV sobre la esfera
        let uv = [];
        let PI2 = 2 * Math.PI
        let d1, d2, d3;
        let u1, v1, u2, v2, u3, v3;

        for (let i = 0; i < vertices.length / 3; i += 3) {
            d1 = new Vector3(
                vertices[i * 3],
                vertices[i * 3 + 1],
                vertices[i * 3 + 2]
            );

            d1 = d1.normalize();

            u1 = 0.5 + (Math.atan2(d1.x, d1.z)) / PI2;
            v1 = 0.5 - (Math.asin(d1.y)) / Math.PI;

            d2 = new Vector3(
                vertices[(i + 1) * 3],
                vertices[(i + 1) * 3 + 1],
                vertices[(i + 1) * 3 + 2]
            );

            d2 = d2.normalize();

            u2 = 0.5 + (Math.atan2(d2.x, d2.z)) / PI2;
            v2 = 0.5 - (Math.asin(d2.y)) / Math.PI;

            d3 = new Vector3(
                vertices[(i + 2) * 3],
                vertices[(i + 2) * 3 + 1],
                vertices[(i + 2) * 3 + 2]
            );

            d3 = d3.normalize();

            u3 = 0.5 + (Math.atan2(d3.x, d3.z)) / PI2;
            v3 = 0.5 - (Math.asin(d3.y)) / Math.PI;

            if (Math.abs(u1 - u2) > 0.5) {
                if (u1 > u2) {
                    u2 = 1 + u2;
                } else {
                    u1 = 1 + u1;
                }
            }
            if (Math.abs(u1 - u3) > 0.5) {
                if (u1 > u3) {
                    u3 = 1 + u3;
                } else {
                    u1 = 1 + u1;
                }
            }
            if (Math.abs(u2 - u3) > 0.5) {
                if (u2 > u3) {
                    u3 = 1 + u3;
                } else {
                    u2 = 1 + u2;
                }
            }

            uv.push(u1, v1, u2, v2, u3, v3);
        }

        return uv;
    }
}